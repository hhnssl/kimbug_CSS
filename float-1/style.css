* {
    box-sizing: border-box;
    margin: 0;
}

body {
    height: 100vh;
    font-family: "Roboto", sans-serif;
    letter-spacing: -0.02em;
    background-color: black;
}

a {
    font-size: 18px;
    line-height: 20px;
    color: #8492a6;
    text-decoration: none;
}

/* ▼ WHERE YOUR CODE BEGINS */

ul {
    /*ul 에 기본적으로 설정되어있는 설정 없애기*/
    list-style-type: none;
    padding-left: 0;
}

.tab-menu {
    max-width: 540px; /* 도안 속 TabNav의 width 크기와 같도록*/
    border-bottom: 1px solid #e5eaef;
    background-color: #fff;
}

/*ul의 자식인 li들이 모두 float 됐으니 ul은 자식들을 잃어버려 height가 0이됨
      이를 방지하기 위해 사용
.tab-menu {
    overflow: hidden;
} 
여기서는 이 방법을 사용하지 않고 가상요소를 만들어 해결함*/

.tab-menu::after {
    content: ""; /*필수*/
    display: block; /*clear 사용 시 block 필수*/
    clear: left; /*얘가 있어야 float의 영향을 받지 않음*/
}

.tab-menu-item {
    float: left;
    /*display가 list-item이 되는데 block이라고 생각하면 됨*/

    margin-right: 16px;
}

.tab-menu-item a {
    /* a가 inline 이어서 padding-top/bottom이 안먹힘. 그래서 display:block으로 바꿔줌*/
    display: block;

    padding: 16px 20px;
    /*
    li가 아닌 a에 padding을 주는 이유
    : li에 주게 되면 글씨만을 눌러야 이동이 되지만
    a에 주게 되면 클릭 범위가 넓어져서 사용자가 더 편해짐
    */
}
.tab-menu-item.selected {
    border-bottom: 2px solid #2860E1;
}

.tab-menu-item.selected a {
    color: #2860e1;
    font-weight: 500;
    /* border-bottom: 2px solid #2860e1; 
    li에 border-bottom을 넣어도 되고 a에 넣어도됨 상관 x*/
}
